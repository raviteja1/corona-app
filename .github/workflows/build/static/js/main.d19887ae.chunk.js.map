{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","Images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","moment","format","console","log","url","fetchData","a","axios","get","Modifieddata","lastUpdated","fetchDailydata","map","dailyData","total","date","reportDate","fetchCountries","countries","country","name","fetchDataOfCountries","changeAbleUrl","Charts","useState","dailydata","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d19887ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3tUBw\",\"card\":\"Cards_card__1bmUA\",\"infected\":\"Cards_infected__2k2kg\",\"recovered\":\"Cards_recovered__3qqCW\",\"deaths\":\"Cards_deaths__kiIex\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport moment from 'moment';\r\nimport cx from 'classnames';\r\n\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed)\r\n    {\r\n        console.log(\"hay\");\r\n        return 'Loading......'\r\n    }\r\n    return(\r\n<div className={styles.container}>\r\n<Grid container spacing={3} justify=\"center\">\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} >\r\n        <CardContent>\r\n    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n                <CountUp \r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"/>\r\n                </Typography>\r\n            <Typography color=\"textSecondary\" >{moment(lastUpdate).format('LLLL')}</Typography>\r\n            <Typography variant=\"body2\">Number of active casese in Covid19</Typography>\r\n        </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\"><CountUp \r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"/></Typography>\r\n            <Typography color=\"textSecondary\" >{moment(lastUpdate).format('LLLL')}</Typography>\r\n            <Typography variant=\"body2\">Number of recovered casese in Covid19</Typography>\r\n        </CardContent>\r\n    </Grid>\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n            <CountUp \r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"/>\r\n            </Typography>\r\n    <Typography color=\"textSecondary\" >{moment(lastUpdate).format('LLLL')}</Typography>\r\n            <Typography variant=\"body2\">Number of Deaths casese in Covid19</Typography>\r\n        </CardContent>\r\n    </Grid>\r\n</Grid>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\nexport const fetchData = async () => {\r\ntry {\r\n    const {data}=await axios.get(url);\r\n    const Modifieddata={\r\n        confirmed:data.confirmed,\r\n        recovered:data.recovered,\r\n        deaths:data.deaths,\r\nlastUpdated:data.lastUpdate,\r\n    }\r\n    console.log(Modifieddata);\r\n    return Modifieddata;\r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n}\r\n\r\nexport const fetchDailydata = async () => {\r\n    try {\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        const Modifieddata=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n       return Modifieddata;\r\n    } catch (error) {\r\n        \r\n    }\r\n    }\r\n\r\n    export const fetchCountries = async () => {\r\n        try {\r\n            const {data:{countries}}=await axios.get(`${url}/countries`);\r\n            return countries.map((country)=>country.name);\r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n        }\r\n\r\n        export const fetchDataOfCountries = async (country) => {\r\n            \r\n        \r\n               let changeAbleUrl=`${url}/countries/${country}`;\r\n                console.log(changeAbleUrl);\r\n                      \r\n            try {\r\n                const {data}=await axios.get(changeAbleUrl);\r\n                const Modifieddata={\r\n                    confirmed:data.confirmed,\r\n                    recovered:data.recovered,\r\n                    deaths:data.deaths,\r\n            lastUpdated:data.lastUpdate,\r\n                }\r\n                console.log(Modifieddata);\r\n                return Modifieddata;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            }","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailydata } from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts=({data:{confirmed,deaths,recovered},country})=>{\r\nconst [dailydata,setDailyData]=useState([]);\r\n\r\nuseEffect(()=>{\r\nconst fetchAPI=async()=>{\r\n    setDailyData(await fetchDailydata());\r\n}\r\nfetchAPI();\r\n\r\n},[]);\r\n\r\nconst lineChart=(\r\n    dailydata.length!=0\r\n    ?(<Line\r\n        data={{\r\n            labels:dailydata.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailydata.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n                            },\r\n            {\r\n                data:dailydata.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                fill:true,\r\n            }],\r\n    }}\r\n      /> ):null\r\n);\r\n\r\nconst barChart=(\r\n    confirmed\r\n    ?(\r\n        <Bar\r\n        data={{\r\n            labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:[\r\n                    'rgba(230, 86, 2, 0.678)',\r\n                    'rgba(0, 255, 0, 0.5)',\r\n                    'rgba(4, 4, 43, 0.5)',\r\n                ],\r\n                data:[confirmed.value,recovered.value,deaths.value]\r\n            }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Current state in ${country}`},\r\n        }}\r\n        />\r\n    ):null\r\n);\r\n    return(\r\n    <div className={styles.container}>\r\n        {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n\r\nuseEffect(()=>{\r\nconst fetchAPI=async()=>{\r\n    setFetchedCountries(await fetchCountries());\r\n}\r\nfetchAPI();\r\n\r\n},[setFetchedCountries]);\r\n    return(\r\n      <FormControl className={styles.formControl}>\r\n          <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n              <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n      </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from'react';\r\nimport './App.css';\r\n// import Cards from './components/Cards/Cards';\r\n// import Charts from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport {Cards,Chart,CountryPicker} from './components'\r\nimport {fetchData,fetchDataOfCountries} from './api';\r\nimport coronaImage from './Images/image.png';\r\n\r\nclass App extends React.Component\r\n{\r\nstate={\r\ndata:{},\r\ncountry:'',\r\n}\r\n\r\n  async componentDidMount()\r\n    {\r\n        const fetchedData=await fetchData();\r\n    this.setState({data:fetchedData});\r\n    }\r\n    \r\nhandleCountryChange=async(country)=>{\r\n    const fetchedData=await fetchDataOfCountries(country);\r\n    this.setState({data:fetchedData,country:country})\r\n    console.log(fetchedData);\r\n}\r\n\r\n    render(){\r\n        const {data,country}=this.state;\r\n        console.log(data);\r\n        return (\r\n            <div className=\"container\">\r\n                <img className=\"image\" src={coronaImage} alt=\"COVID-19\"/>\r\n               <Cards data={data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3WrX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2wdxP\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}